variables:
  PROJECT_VERSION: 1.2-SNAPSHOT
  SLS_IMAGE: registry.gitlab.ost.ch:45023/stefan.kapferer/serverless-framework-docker-image/sls:v1.0

stages:
  - build
  - deploy

tla-manager-build:
  stage: build
  image: openjdk:17-alpine
  script:
    - echo "Building tla-manager..."
    - cd tla-manager
    - ./mvnw clean package
    - echo "tla-manager successfully built."
  artifacts:
    paths:
      - tla-manager/target/tla-sample-serverless-${PROJECT_VERSION}-aws.jar

tla-resolver-build:
  stage: build
  image: golang:1.24.3-alpine
  before_script:
    - apk add --no-cache git
    - apk add --no-cache make
    - apk add --no-cache zip
  script:
    - echo "Building tla-resolver..."
    - cd tla-resolver
    - make build
    - echo "tla-resolver successfully built."
  artifacts:
    paths:
      - tla-resolver/dist/**/*.zip

.deploy:
  stage: deploy
  image: $SLS_IMAGE
  environment: dev
  variables:
    SERVERLESS_ACCESS_KEY: $SERVERLESS_ACCESS_KEY
  only:
    refs:
      - main

deploy-tla-manager:
  extends: .deploy
  script:
    - echo "Deploying tla-manager..."
    - cd tla-manager
    - export SERVERLESS_ACCESS_KEY=${SERVERLESS_ACCESS_KEY}
    - sls deploy
    - sls invoke --function seed_database --data 'unused'
    - echo "Application successfully deployed."

deploy-tla-resolver:
  extends: .deploy
  needs: [ 'deploy-tla-manager' ]
  script:
    - echo "Deploying tla-resolver..."
    - cd tla-resolver
    - export SERVERLESS_ACCESS_KEY=${SERVERLESS_ACCESS_KEY}
    - sls deploy
    - echo "Application successfully deployed."

undeploy-all:
  stage: deploy
  image: $SLS_IMAGE
  environment: dev
  variables:
    SERVERLESS_ACCESS_KEY: $SERVERLESS_ACCESS_KEY
  when: manual
  only:
    refs:
      - main
  script:
    - echo "Undeploying application..."
    - cd tla-manager
    - sls remove
    - cd ../tla-resolver
    - sls remove
    - echo "Application successfully undeployed."
